
import os
import os.path
import glob
from PIL import Image
import numpy as np
import binascii
from to_image_util import get_gray_images
'''
PE结构文件转换图像
- PE结构文件应该与.bytes文件不同


'''

# 将.bytes中的文本16进制读出来
# def read_bytes(file_path):
#     res_bytes = []
#     with open(file_path) as fp:
#         for byte_line in fp.readlines():    # 循环读出每一行
#             str_bytes = byte_line.split(" ")  # 根据空格划分为数组
#             for str_byte in str_bytes:
#                 if str_byte[0] == '?':  # 舍弃无用字符
#                     continue
#                 byte = int(str_byte, 16)    # 将字符按照16进制转成数字
#                 if byte <= 0xFF:            # 每行前面的地址都要舍弃
#                     res_bytes.append(byte)
#     return res_bytes


if __name__ == "__main__":
    # fh = read_bytes(r"D:\research\datasets\3_malware\CCF_1_train_set\pe\000c4edbbc5a107bcf1e06b1e0f6d9a3")
    # print(fh, fh.shape) # [  0   0   0 ... 127  31 197] (1864053,)
    # image_bytes = get_gray_image(fh)
    # print(image_bytes, image_bytes.shape) # (1820, 1024)

    get_gray_images(r"D:\research\datasets\3_malware\CCF_1_train_set\pe")