
import pandas as pd

import warnings
warnings.filterwarnings("ignore")
import shutil
import os
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
from sklearn.manifold import TSNE
from sklearn import preprocessing
from matplotlib.pyplot import MultipleLocator

def get_files_dict(csv_path):
    '''
    :param csv_path:
    :return: files_dict
        0: 标签为0的文件列表
        1: 标签为1的文件列表
    '''
    df = pd.read_csv(csv_path) # content:dataframe
    df_sort = df.sort_values("family")
    files_dict = {}
    for family in range(0, 10):
        df_fams = df_sort[df_sort['family'] == family]
        files_dict[family] = list(df_fams['filename'].values)
        # print(len(files_dict[family]))
    return files_dict


def get_files_size_dict(csv_path, files_path):
    files_dict = get_files_dict(csv_path)
    os.chdir(files_path)
    files_size_dict = {}
    for family in range(0, 10):
        files_list = files_dict[family]
        file_size_list = []
        for file in files_list:
            file_size = os.path.getsize(file)/1024 # KB
            file_size_list.append(file_size)
        files_size_dict[family] = file_size_list
        # print(file_size_list)
    # print(files_size_dict)
    return files_dict, files_size_dict


if __name__ == "__main__":

    csv_path = r"D:\research\datasets\3_malware\CCF_1_train_set\train_label.csv"
    get_files_dict(csv_path) # fams:0,1,2... nums:对应数量

    # rects = plt.bar(fams, nums)
    # plt.xlabel("classs")
    # plt.ylabel("nums")
    # x_major_locator = MultipleLocator(1)
    # ax = plt.gca()
    # ax.xaxis.set_major_locator(x_major_locator)
    # # 条形之上的数值
    # for rect in rects:
    #     height = rect.get_height()
    #     plt.text(rect.get_x() + rect.get_width() / 2, height + 1, str(height), ha="center", va="bottom")
    # plt.show()

    pe_path = r"D:\research\datasets\3_malware\CCF_1_train_set\pe"
    # files_dict, files_size_dict = get_files_size_dict(csv_path, pe_path)
    get_files_size_dict(csv_path, pe_path)
    # print(files_size_dict)